openapi: 3.1.0
info:
  title: Best practices on OAS
  description: Best practices on OAS
  version: 1.0.0
servers:
  - url: 'http:localhost:8000'

tags:
  - name: Users
    description: User infos

components:
  schemas:
    PersonalInfo:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
        email:
          type: string
          format: email
      required:
        - first_name
        - last_name
        - email
    Address:
      type: object
      properties:
        address_street:
          type: string
        address_city:
          type: string
        address_country:
          type: string
        address_postal_code:
          type: string
      required:
        - address_street
        - address_city
        - address_country
        - address_postal_code
    Preferences:
      type: object
      properties:
        needs_newsletter:
          type: boolean
        language:
          type: string
          enum:
            - mg
            - fr
            - eng
      required:
        - language
    CreateUserProfile:
      type: object
      allOf:
        - $ref: "#/components/schemas/PersonalInfo"
        - type: object
          properties:
            address_street:
              type: string
            address_city:
              type: string
            address_country:
              type: string
            address_postal_code:
              type: string
            needs_newsletter:
              type: boolean
          required:
            - first_name
            - last_name
            - email
    UserProfile:
      type: object
      properties:
        identifier:
          type: string
      allOf:
        - $ref: "#/components/schemas/PersonalInfo"
        - $ref: "#/components/schemas/Address"
        - $ref: "#/components/schemas/Preferences"
      required:
        - identifier
        - first_name
        - last_name
        - birthdate
        - email
        - address_street
        - address_city
        - address_country
        - address_postal_code
        - needs_newsletter
        - language
  parameters:
    Id:
      name: id
      in: path
      schema:
        type: object
      required: true

paths:
  /users/{id}:
    get:
      tags:
        - Users
      description: Returns the user with all their information
      parameters:
        - $ref: "#/components/parameters/Id"
      responses:
        200:
          description: User Info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
              example:
                identifier: "test123"
                first_name: "Test"
                last_name: "Example"
                birthdate: "2000-01-02"
                email: "test@example.com"
                address_street: "123 Test Street"
                address_city: "Los Angeles"
                address_country: "America"
                address_postal_code: "88901"
                needs_newsletter: true
                language: "eng"


